#workflow rulez comes later here
default:
  tags:
    - glexecutor-docker
  image: node:16
  cache: # Cache modules in between jobs
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/
      - node_modules/

variables:
  FF_NETWORK_PER_BUILD: "true"
  CI_DEBUG_SERVICES: "true"

stages:
  - lint
  - build
  - test

lint-job:
  stage: lint
  script:
    - echo 'try lint'

build-job:      
  needs:
    - lint-job
  stage: build
  script:
    - npm ci --cache .npm --prefer-offline
    - npm install
    - npm install --silent websocket
    - npm run dist 
    - npm run test:build  
  artifacts:
      paths:
         - build
         - dist
         - commonjs
      expire_in: 30 mins

node-test-job:
  stage: test
  dependencies: ["build-job"]
  variables:
    TEST_SERVER: "http://orestes:8080/v1"
  services:
    - mongo:4.0.5
    - redis:4.0
    - name: docker.baqend.com/baqend/node14:master
      alias: node
      command: ["tcp://orestes:8081", "http://orestes:8080/v1", "debug"]
    - name: docker.baqend.com/baqend/orestes:master
      alias: orestes
      command:
        - "--with-mongo"
        - "--with-gridfs"
        - "--log-level"
        - "trace"
        - "--debug"
        - "--dashboard"
        - "/opt/baqend/node_modules/baqend-dash/dist"
  script:
    - npm run test:node
  artifacts:
    when: always
    reports:
      junit:
        - ./build/test-results/node-result.xml


karma-test-job:
  stage: test
  dependencies: ["build-job"]
  variables:
    TEST_SERVER: "http://orestes:8080/v1"
    KARMA_HOST : "bq3.baqend.com"
  services:
    - mongo:4.0.5
    - redis:4.0
    - name: docker.baqend.com/baqend/node14:master
      alias: node
      command: ["tcp://orestes:8081", "http://orestes:8080/v1", "debug"]
    - name: docker.baqend.com/baqend/orestes:master
      alias: orestes
      command:
        - "--with-mongo"
        - "--with-gridfs"
        - "--log-level"
        - "trace"
        - "--debug"
        - "--dashboard"
        - "/opt/baqend/node_modules/baqend-dash/dist"
  before_script:
    - apt-get update && apt-get install gnupg wget -y
    - wget --quiet --output-document=- https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /etc/apt/trusted.gpg.d/google-archive.gpg
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update && apt-get install google-chrome-stable -y --no-install-recommends
    - node node_modules/puppeteer/install.js

  script:
    - npm run test:karma --reporters=junit
  artifacts:
    when: always
    reports:
      junit:
        - ./build/test-results/karma-result.xml